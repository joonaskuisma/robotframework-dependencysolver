[ INFO ] The following arguments were obtained: ('--include', 'testB', '--exclude', 'B6', '--debug', '--without_timestamps', '--loglevel', 'DEBUG', '--consoleloglevel', 'INFO', '--pabot', 'FULL')
[ DEBUG ] Started suite: 'Data 1'
[ INFO ] Starting to explore the dependencies...
[ DEBUG ] Investigating subsuite 'Data 1.suiteA'
[ DEBUG ] Investigating subsuite 'Data 1.suiteB'
[ DEBUG ] Requested test 'Data 1.suiteB.TestB1' because of --include option: 'testB'
[ DEBUG ] Requested test 'Data 1.suiteB.TestB2' because of --include option: 'testB'
[ DEBUG ] Requested test 'Data 1.suiteB.TestB3' because of --include option: 'testB'
[ DEBUG ] Requested test 'Data 1.suiteB.TestB4' because of --include option: 'testB'
[ DEBUG ] Requested test 'Data 1.suiteB.TestB5' because of --include option: 'testB'
[ DEBUG ] Requested test 'Data 1.suiteB.TestB6' because of --include option: 'testB'
[ DEBUG ] Not requested test 'Data 1.suiteB.TestB6' because of --exclude option: 'B6'
[ DEBUG ] These are tests which user requested: ['Data 1.suiteB.TestB1', 'Data 1.suiteB.TestB2', 'Data 1.suiteB.TestB3', 'Data 1.suiteB.TestB4', 'Data 1.suiteB.TestB5']
[ INFO ] Starting relation chain checking...
[ INFO ] Checking relation chain for test 'Data 1.suiteB.TestB1'
[ DEBUG ] Dependency: 'Data 1.suiteB.TestB1' -> 'TestA5'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA5' -> 'TestA3'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA3' -> 'TestA2'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA2' -> 'TestA1'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA5' -> 'TestA4'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA4' -> 'TestA2'
[ INFO ] In test case 'Data 1.suiteA.TestA2' either the branches merge or it is a loop. Let's explore what we end up with if we start with this test.
[ INFO ] Starting in loop check mode.
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA2' -> 'TestA1'
[ INFO ] It was a merge, so let's exit loop check mode:
[ DEBUG ] These tests are already check as loop safe: ['Data 1.suiteA.TestA2', 'Data 1.suiteA.TestA1']
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA2' -> 'TestA1'
[ DEBUG ] 'Data 1.suiteA.TestA1' has already been checked and does not contain a loop.
[ DEBUG ] Adding 'Data 1.suiteB.TestB1'
[ DEBUG ] Adding 'Data 1.suiteA.TestA5'
[ DEBUG ] Adding 'Data 1.suiteA.TestA3'
[ DEBUG ] Adding 'Data 1.suiteA.TestA2'
[ DEBUG ] Adding 'Data 1.suiteA.TestA1'
[ DEBUG ] Adding 'Data 1.suiteA.TestA4'
[ INFO ] Checking relation chain for test 'Data 1.suiteB.TestB2'
[ DEBUG ] Dependency: 'Data 1.suiteB.TestB2' -> 'TestB1'
[ DEBUG ] Dependency: 'Data 1.suiteB.TestB1' -> 'TestA5'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA5' -> 'TestA3'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA3' -> 'TestA2'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA2' -> 'TestA1'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA5' -> 'TestA4'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA4' -> 'TestA2'
[ DEBUG ] 'Data 1.suiteA.TestA2' has already been checked and does not contain a loop.
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA2' -> 'TestA1'
[ DEBUG ] 'Data 1.suiteA.TestA1' has already been checked and does not contain a loop.
[ DEBUG ] Adding 'Data 1.suiteB.TestB2'
[ DEBUG ] 'Data 1.suiteB.TestB1' is already added.
[ DEBUG ] 'Data 1.suiteA.TestA5' is already added.
[ DEBUG ] 'Data 1.suiteA.TestA3' is already added.
[ DEBUG ] 'Data 1.suiteA.TestA2' is already added.
[ DEBUG ] 'Data 1.suiteA.TestA1' is already added.
[ DEBUG ] 'Data 1.suiteA.TestA4' is already added.
[ INFO ] Checking relation chain for test 'Data 1.suiteB.TestB3'
[ DEBUG ] Dependency: 'Data 1.suiteB.TestB3' -> 'TestB2'
[ DEBUG ] Dependency: 'Data 1.suiteB.TestB2' -> 'TestB1'
[ DEBUG ] Dependency: 'Data 1.suiteB.TestB1' -> 'TestA5'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA5' -> 'TestA3'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA3' -> 'TestA2'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA2' -> 'TestA1'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA5' -> 'TestA4'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA4' -> 'TestA2'
[ DEBUG ] 'Data 1.suiteA.TestA2' has already been checked and does not contain a loop.
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA2' -> 'TestA1'
[ DEBUG ] 'Data 1.suiteA.TestA1' has already been checked and does not contain a loop.
[ DEBUG ] Adding 'Data 1.suiteB.TestB3'
[ DEBUG ] 'Data 1.suiteB.TestB2' is already added.
[ DEBUG ] 'Data 1.suiteB.TestB1' is already added.
[ DEBUG ] 'Data 1.suiteA.TestA5' is already added.
[ DEBUG ] 'Data 1.suiteA.TestA3' is already added.
[ DEBUG ] 'Data 1.suiteA.TestA2' is already added.
[ DEBUG ] 'Data 1.suiteA.TestA1' is already added.
[ DEBUG ] 'Data 1.suiteA.TestA4' is already added.
[ INFO ] Checking relation chain for test 'Data 1.suiteB.TestB4'
[ DEBUG ] Dependency: 'Data 1.suiteB.TestB4' -> 'TestB2'
[ DEBUG ] Dependency: 'Data 1.suiteB.TestB2' -> 'TestB1'
[ DEBUG ] Dependency: 'Data 1.suiteB.TestB1' -> 'TestA5'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA5' -> 'TestA3'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA3' -> 'TestA2'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA2' -> 'TestA1'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA5' -> 'TestA4'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA4' -> 'TestA2'
[ DEBUG ] 'Data 1.suiteA.TestA2' has already been checked and does not contain a loop.
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA2' -> 'TestA1'
[ DEBUG ] 'Data 1.suiteA.TestA1' has already been checked and does not contain a loop.
[ DEBUG ] Adding 'Data 1.suiteB.TestB4'
[ DEBUG ] 'Data 1.suiteB.TestB2' is already added.
[ DEBUG ] 'Data 1.suiteB.TestB1' is already added.
[ DEBUG ] 'Data 1.suiteA.TestA5' is already added.
[ DEBUG ] 'Data 1.suiteA.TestA3' is already added.
[ DEBUG ] 'Data 1.suiteA.TestA2' is already added.
[ DEBUG ] 'Data 1.suiteA.TestA1' is already added.
[ DEBUG ] 'Data 1.suiteA.TestA4' is already added.
[ INFO ] Checking relation chain for test 'Data 1.suiteB.TestB5'
[ DEBUG ] Dependency: 'Data 1.suiteB.TestB5' -> 'TestB3'
[ DEBUG ] Dependency: 'Data 1.suiteB.TestB3' -> 'TestB2'
[ DEBUG ] Dependency: 'Data 1.suiteB.TestB2' -> 'TestB1'
[ DEBUG ] Dependency: 'Data 1.suiteB.TestB1' -> 'TestA5'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA5' -> 'TestA3'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA3' -> 'TestA2'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA2' -> 'TestA1'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA5' -> 'TestA4'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA4' -> 'TestA2'
[ DEBUG ] 'Data 1.suiteA.TestA2' has already been checked and does not contain a loop.
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA2' -> 'TestA1'
[ DEBUG ] 'Data 1.suiteA.TestA1' has already been checked and does not contain a loop.
[ DEBUG ] Dependency: 'Data 1.suiteB.TestB5' -> 'TestB4'
[ DEBUG ] Dependency: 'Data 1.suiteB.TestB4' -> 'TestB2'
[ INFO ] In test case 'Data 1.suiteB.TestB2' either the branches merge or it is a loop. Let's explore what we end up with if we start with this test.
[ INFO ] Starting in loop check mode.
[ DEBUG ] Dependency: 'Data 1.suiteB.TestB2' -> 'TestB1'
[ DEBUG ] Dependency: 'Data 1.suiteB.TestB1' -> 'TestA5'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA5' -> 'TestA3'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA3' -> 'TestA2'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA2' -> 'TestA1'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA5' -> 'TestA4'
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA4' -> 'TestA2'
[ DEBUG ] 'Data 1.suiteA.TestA2' has already been checked and does not contain a loop.
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA2' -> 'TestA1'
[ DEBUG ] 'Data 1.suiteA.TestA1' has already been checked and does not contain a loop.
[ INFO ] It was a merge, so let's exit loop check mode:
[ DEBUG ] These tests are already check as loop safe: ['Data 1.suiteA.TestA2', 'Data 1.suiteA.TestA1', 'Data 1.suiteB.TestB2', 'Data 1.suiteB.TestB1', 'Data 1.suiteA.TestA5', 'Data 1.suiteA.TestA3', 'Data 1.suiteA.TestA2', 'Data 1.suiteA.TestA1', 'Data 1.suiteA.TestA4']
[ DEBUG ] Dependency: 'Data 1.suiteB.TestB2' -> 'TestB1'
[ DEBUG ] 'Data 1.suiteB.TestB1' has already been checked and does not contain a loop.
[ DEBUG ] Dependency: 'Data 1.suiteB.TestB1' -> 'TestA5'
[ DEBUG ] 'Data 1.suiteA.TestA5' has already been checked and does not contain a loop.
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA5' -> 'TestA3'
[ DEBUG ] 'Data 1.suiteA.TestA3' has already been checked and does not contain a loop.
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA3' -> 'TestA2'
[ DEBUG ] 'Data 1.suiteA.TestA2' has already been checked and does not contain a loop.
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA2' -> 'TestA1'
[ DEBUG ] 'Data 1.suiteA.TestA1' has already been checked and does not contain a loop.
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA5' -> 'TestA4'
[ DEBUG ] 'Data 1.suiteA.TestA4' has already been checked and does not contain a loop.
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA4' -> 'TestA2'
[ DEBUG ] 'Data 1.suiteA.TestA2' has already been checked and does not contain a loop.
[ DEBUG ] Dependency: 'Data 1.suiteA.TestA2' -> 'TestA1'
[ DEBUG ] 'Data 1.suiteA.TestA1' has already been checked and does not contain a loop.
[ DEBUG ] Adding 'Data 1.suiteB.TestB5'
[ DEBUG ] 'Data 1.suiteB.TestB3' is already added.
[ DEBUG ] 'Data 1.suiteB.TestB2' is already added.
[ DEBUG ] 'Data 1.suiteB.TestB1' is already added.
[ DEBUG ] 'Data 1.suiteA.TestA5' is already added.
[ DEBUG ] 'Data 1.suiteA.TestA3' is already added.
[ DEBUG ] 'Data 1.suiteA.TestA2' is already added.
[ DEBUG ] 'Data 1.suiteA.TestA1' is already added.
[ DEBUG ] 'Data 1.suiteA.TestA4' is already added.
[ DEBUG ] 'Data 1.suiteB.TestB4' is already added.
[ INFO ] 10 tests would have been chosen. List of test: ['Data 1.suiteB.TestB1', 'Data 1.suiteA.TestA5', 'Data 1.suiteA.TestA3', 'Data 1.suiteA.TestA2', 'Data 1.suiteA.TestA1', 'Data 1.suiteA.TestA4', 'Data 1.suiteB.TestB2', 'Data 1.suiteB.TestB3', 'Data 1.suiteB.TestB4', 'Data 1.suiteB.TestB5']
[ WARNING ] DEBUG mode activated. Emptying test case list...
[ INFO ] Choosing tests...
[ DEBUG ] Started suite: 'Data 1.suiteA'
[ DEBUG ] Finishing suite: 'Data 1.suiteA'
[ DEBUG ] Started suite: 'Data 1.suiteB'
[ DEBUG ] Finishing suite: 'Data 1.suiteB'
[ DEBUG ] Finishing suite: 'Data 1'
