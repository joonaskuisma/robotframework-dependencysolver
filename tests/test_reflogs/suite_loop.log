[ INFO ] The following arguments were obtained: ('--include', 'E', '--debug', '--without_timestamps', '--loglevel', 'DEBUG', '--consoleloglevel', 'INFO', '--pabot', 'FULL')
[ DEBUG ] Started suite: 'Data 4'
[ INFO ] Starting to explore the dependencies...
[ DEBUG ] Investigating subsuite 'Data 4.suiteD'
[ DEBUG ] Investigating subsuite 'Data 4.suiteE'
[ DEBUG ] Requested test 'Data 4.suiteE.TestE1' because of --include option: 'E'
[ DEBUG ] Requested test 'Data 4.suiteE.TestE2' because of --include option: 'E'
[ DEBUG ] These are tests which user requested: ['Data 4.suiteE.TestE1', 'Data 4.suiteE.TestE2']
[ INFO ] Starting relation chain checking...
[ INFO ] Checking relation chain for test 'Data 4.suiteE.TestE1'
[ DEBUG ] Dependency: 'Data 4.suiteE.TestE1' -> 'TestD2'
[ DEBUG ] Adding 'Data 4.suiteE.TestE1'
[ DEBUG ] Adding 'Data 4.suiteD.TestD2'
[ INFO ] Checking relation chain for test 'Data 4.suiteE.TestE2'
[ DEBUG ] Dependency: 'Data 4.suiteE.TestE2' -> 'suiteD'
[ DEBUG ] Transforming suite dependency to test dependencies...
[ DEBUG ] Transformed dependency: 'Data 4.suiteE.TestE2' -> 'Data 4.suiteD.TestD1'
[ DEBUG ] Dependency: 'Data 4.suiteD.TestD1' -> 'suiteE'
[ DEBUG ] Transforming suite dependency to test dependencies...
[ DEBUG ] Transformed dependency: 'Data 4.suiteD.TestD1' -> 'Data 4.suiteE.TestE1'
[ DEBUG ] Dependency: 'Data 4.suiteE.TestE1' -> 'TestD2'
[ DEBUG ] Transformed dependency: 'Data 4.suiteD.TestD1' -> 'Data 4.suiteE.TestE2'
[ INFO ] In test case 'Data 4.suiteE.TestE2' either the branches merge or it is a loop. Let's explore what we end up with if we start with this test.
[ INFO ] Starting in loop check mode.
[ DEBUG ] Dependency: 'Data 4.suiteE.TestE2' -> 'suiteD'
[ DEBUG ] Transforming suite dependency to test dependencies...
[ DEBUG ] Transformed dependency: 'Data 4.suiteE.TestE2' -> 'Data 4.suiteD.TestD1'
[ DEBUG ] Dependency: 'Data 4.suiteD.TestD1' -> 'suiteE'
[ DEBUG ] Transforming suite dependency to test dependencies...
[ DEBUG ] Transformed dependency: 'Data 4.suiteD.TestD1' -> 'Data 4.suiteE.TestE1'
[ DEBUG ] Dependency: 'Data 4.suiteE.TestE1' -> 'TestD2'
[ DEBUG ] Transformed dependency: 'Data 4.suiteD.TestD1' -> 'Data 4.suiteE.TestE2'
[ ERROR ] Dependencies are cyclical! Test case 'Data 4.suiteE.TestE2' is already part of the relation chain: dict_values(['Data 4.suiteE.TestE2', 'Data 4.suiteD.TestD1', 'Data 4.suiteE.TestE1', 'Data 4.suiteD.TestD2']) Execution of tests cannot be started!
