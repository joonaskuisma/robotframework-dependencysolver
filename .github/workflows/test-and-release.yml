name: Test and Release

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    branches:
      - main

permissions:
  contents: write 

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        robotframework-version: ["7.0.1", "7.1.1", "7.2.2"]
      #pabot-version: ["4.1"]
      #dependencylib-version: ["4.0"]
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      
      - name: Checkout repository
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."

      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "robotframework==${{ matrix.robotframework-version }}"
        #pip install pytest coverage
        #pip install "robotframework-pabot==${{ matrix.pabot-version }}"
        #pip install "robotframework-dependencylibrary==${{ matrix.dependencylib-version }}"
      
      - name: Install package
        run: pip install -e .[dev]

      - name: Run tests with pytest
        run: pytest tests/
      #run: pytest --cov=DependencySolver tests/

      #- name: Upload test results
      #  uses: actions/upload-artifact@v4
      #  if: always()
      #  with:
      #    name: pytest-test-results
      #    path: coverage.xml
      - run: echo "üçè Test job's status is ${{ job.status }}."

  release:
    name: Build and Release
    needs: test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Upload release assets to GitHub with auto changelog
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          generate_release_notes: true
          files: |
            dist/*.tar.gz
            dist/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 

      - name: Publish package to PyPI
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*

      - name: Verify package on PyPI
        run: pip install --no-cache-dir robotframework-dependencysolver==$(echo ${{ github.ref_name }} | sed 's/^v//')

      #- name: Test PyPI package  # This needs at lease some tests to be part of the package
      #  run: |
      #    python -m venv venv
      #    source venv/bin/activate
      #    pip install robotframework-dependencysolver==${{ github.ref_name }}
      #    pytest --pyargs robotframework-dependencysolver

      - run: echo "üçè Release job's status is ${{ job.status }}."
